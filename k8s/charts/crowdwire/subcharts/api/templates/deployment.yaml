apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api.fullname" . }}
  labels:
    {{- include "api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - env:
        - name: RUNNING_MODE
          value: {{ .Values.running_mode }}
        - name: CLIENT_ID
          value: {{ .Values.CLIENT_ID }}
        - name: CLIENT_SECRET
          value: {{ .Values.CLIENT_SECRET }}
        - name: EMAIL
          value: {{ .Values.EMAIL }}  
        - name: EMAIL_PASSWORD
          value: {{ .Values.EMAIL_PASSWORD }}
    #Check out the changes to the Secrets in the Redis, Postgres Charts!
    #Change this later to a for loop, puting here the values destroys the idea of templating
    {{- if and .Values.postgresql.enabled .Values.rabbitmq.enabled }}
        - name: POSTGRES_SERVICE_NAME
          value: {{ include "api.postgresservicename" . }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: postgresql-user
              name: {{ include "api.postgresservicename" . }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: {{ include "api.postgresservicename" . }}
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: postgresql-db
              name: {{ include "api.postgresservicename" . }}
        - name: RABBITMQ_SERVICE_NAME
          value: {{ include "api.rabbitmqservicename" . }}
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              key: rabbitmq-username
              name: {{ include "api.rabbitmqservicename" . }}
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
                key: rabbitmq-password
                name: {{ include "api.rabbitmqservicename" . }}
        - name: RABBITMQ_ERL_COOKIE
          valueFrom:
            secretKeyRef:
              key: rabbitmq-erlang-cookie
              name: {{ include "api.rabbitmqservicename" . }}
        - name: REDIS_SENTINEL_HOST
          value: {{ include "api.rediservicename" . }}
        {{- end }}   
        name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: 8000
            protocol: TCP
        #readinessProbe:
        #  httpGet:
        #    path: /docs
        #    port: 8000
        #  initialDelaySeconds: 5
        #  periodSeconds: 30 

        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
